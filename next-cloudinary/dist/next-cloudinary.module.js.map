{"version":3,"file":"next-cloudinary.module.js","sources":["../src/constants/qualifiers.js","../src/loaders/cloudinary-loader.js","../src/components/CldImage/CldImage.js"],"sourcesContent":["export const primary = {\n  crop: {\n    qualifier: 'c'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  height: {\n    qualifier: 'h'\n  },\n  width: {\n    qualifier: 'w'\n  },\n};\n\nexport const position = {\n  angle: {\n    qualifier: 'a'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  x: {\n    qualifier: 'x'\n  },\n  y: {\n    qualifier: 'y'\n  },\n}\n\nexport const text = {\n  color: {\n    qualifier: 'co',\n    location: 'primary'\n  },\n  textDecoration: {\n    qualifier: false\n  },\n  fontFamily: {\n    qualifier: false\n  },\n  fontSize: {\n    qualifier: false\n  },\n  fontWeight: {\n    qualifier: false\n  },\n  letterSpacing: {\n    qualifier: 'letter_spacing'\n  }\n}","import { Cloudinary } from '@cloudinary/url-gen';\n\nimport {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nconst cld = new Cloudinary({\n  cloud: {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n  }\n});\n\nexport function cloudinaryLoader(options, cldOptions) {\n  const {\n    src,\n    width,\n    format = 'auto',\n    quality = 'auto',\n  } = options;\n\n  const {\n    overlays = [],\n    effects = [],\n    removeBackground = false,\n    underlays = []\n  } = cldOptions;\n\n  const cldImage = cld.image(src);\n\n  if ( removeBackground ) {\n    cldImage.effect('e_background_removal');\n  }\n\n  // Adding overlays and underlays allows you to compose your image\n  // by using layering with overlays appearing on top of and udnerlays\n  // appearing below your base image layer\n  //\n  // Learn more: https://cloudinary.com/documentation/layers\n\n  const layers = [\n    ...overlays.map(overlay => ({ ...overlay, type: 'overlay' })),\n    ...underlays.map(underlay => ({ ...underlay, type: 'underlay' })),\n  ];\n\n  layers.forEach(({ publicId, type, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasText = typeof text === 'object';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId && !hasText ) {\n      console.warn(`${type} is missing Public ID or Text`);\n      return;\n    }\n\n    // Determine the qualifier for the type of layer\n\n    let typeQualifier;\n\n    if ( type === 'overlay' ) {\n      typeQualifier = 'l';\n    } else if ( type === 'underlay' ) {\n      typeQualifier = 'u';\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation;\n\n    if ( hasText ) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n    }\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Text styling\n\n    if ( hasText ) {\n      const textTransformations = [];\n\n      Object.keys(text).forEach(key => {\n        if ( !qualifiersText[key] ) return;\n\n        const { qualifier, location } = qualifiersText[key];\n\n        if ( location === 'primary' ) {\n          primary.push(`${qualifier}_${text[key]}`);\n        } else {\n          textTransformations.push(text[key]);\n        }\n      });\n\n      layerTransformation = `${layerTransformation}:${textTransformations.join('_')}:${text.text}`\n    }\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n\n  return cldImage.resize(`c_limit,w_${width}`).format(format).delivery(`q_${quality}`).toURL();\n}","import Image from 'next/image';\nimport { Cloudinary } from '@cloudinary/url-gen';\n\nimport { cloudinaryLoader } from '../../loaders/cloudinary-loader';\n\nconst cld = new Cloudinary({\n  cloud: {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n  },\n  url: {\n    // Used to avoid issues with SSR particularly for the blurred placeholder\n    analytics: false\n  }\n});\n\nconst CldImage = ({ overlays, removeBackground, underlays, ...props }) => {\n  const cldOptions = {\n    overlays,\n    removeBackground,\n    underlays,\n  };\n\n  const imageProps = {};\n\n  // If we see a placeholder option, configure a Cloudinary-based URL.\n  // The resulting image will always be blurred per Next.js, so we're\n  // limited on options for placeholders.\n  // https://nextjs.org/docs/api-reference/next/image#blurdataurl\n\n  if ( props.placeholder ) {\n    const cldBlurredImage = cld.image(props.src)\n                                .resize('c_limit,w_100')\n                                .delivery('q_1')\n                                .format('auto');\n\n    if ( props.placeholder === 'grayscale' ) {\n      cldBlurredImage.effect('e_grayscale');\n    }\n\n    if ( props.placeholder.includes('color:') ) {\n      const color = props.placeholder.split(':').splice(1).join(':')\n      cldBlurredImage.effect('e_grayscale');\n      cldBlurredImage.effect(`e_colorize:60,co_${color}`);\n    }\n\n    imageProps.blurDataURL = cldBlurredImage.toURL();\n\n    if ( props.placeholder !== 'blur' ) {\n      props.placeholder = 'blur';\n    }\n  }\n\n  return (\n    <Image\n      {...imageProps}\n      {...props}\n      loader={(options) => cloudinaryLoader(options, cldOptions)}\n    />\n  );\n}\n\nexport default CldImage;"],"names":["primary","crop","qualifier","gravity","height","width","position","angle","x","y","text","color","location","textDecoration","fontFamily","fontSize","fontWeight","letterSpacing","cld","Cloudinary","cloud","cloudName","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","cloudinaryLoader","options","cldOptions","src","format","quality","overlays","removeBackground","underlays","cldImage","image","effect","layers","map","overlay","type","underlay","forEach","publicId","effects","layerEffects","_excluded","hasPublicId","hasText","hasPosition","console","warn","typeQualifier","layerTransformation","replace","applied","Object","keys","key","qualifiersPrimary","push","textTransformations","qualifiersText","join","qualifiersPosition","length","addTransformation","resize","delivery","toURL","url","analytics","CldImage","props","imageProps","placeholder","cldBlurredImage","includes","split","splice","blurDataURL","_jsx"],"mappings":"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"}