{"version":3,"file":"next-cloudinary.umd.js","sources":["../src/lib/cloudinary.js","../src/plugins/cropping.js","../src/constants/qualifiers.js","../src/plugins/overlays.js","../src/plugins/remove-background.js","../src/plugins/effects.js","../src/plugins/underlays.js","../src/plugins/zoompan.js","../src/loaders/cloudinary-loader.js","../src/components/CldImage/CldImage.js"],"sourcesContent":["import { Cloudinary } from '@cloudinary/url-gen';\n\nconst cld = new Cloudinary({\n  cloud: {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n  },\n  url: {\n    // Used to avoid issues with SSR particularly for the blurred placeholder\n    analytics: false\n  }\n});\n\n/**\n * createPlaceholderUrl\n */\n\nexport function createPlaceholderUrl({ src, placeholder }) {\n  const cldImage = cld.image(src)\n                      .resize('c_limit,w_100')\n                      .delivery('q_1')\n                      .format('auto');\n\n  if ( placeholder === 'grayscale' ) {\n    cldImage.effect('e_grayscale');\n  }\n\n  if ( placeholder.includes('color:') ) {\n    const color = placeholder.split(':').splice(1).join(':')\n    cldImage.effect('e_grayscale');\n    cldImage.effect(`e_colorize:60,co_${color}`);\n  }\n\n  return cldImage.toURL();\n}","const cropsGravityAuto = [ 'crop', 'fill', 'lfill', 'fill_pad', 'thumb' ];\n\nexport const props = ['crop', 'gravity'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { width, height } = options;\n  const { crop = 'limit', gravity } = cldOptions;\n\n  let transformationString = `c_${crop},w_${width}`;\n\n  if ( !gravity && cropsGravityAuto.includes(crop) ) {\n    gravity = 'auto';\n  }\n\n  if ( !['limit'].includes(crop) ) {\n    transformationString = `${transformationString},h_${height}`;\n  }\n\n  if ( gravity ) {\n    if ( gravity === 'auto' && !cropsGravityAuto.includes(crop) ) {\n      console.warn('Auto gravity can only be used with crop, fill, lfill, fill_pad or thumb. Not applying gravity.');\n    } else {\n      transformationString = `${transformationString},g_${gravity}`;\n    }\n  }\n\n  cldImage.resize(transformationString);\n}","// aspectRatio\n\nexport const primary = {\n  aspectRatio: {\n    qualifier: 'ar'\n  },\n  crop: {\n    qualifier: 'c'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  height: {\n    qualifier: 'h'\n  },\n  width: {\n    qualifier: 'w'\n  },\n};\n\nexport const position = {\n  angle: {\n    qualifier: 'a'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  x: {\n    qualifier: 'x'\n  },\n  y: {\n    qualifier: 'y'\n  },\n}\n\nexport const text = {\n  color: {\n    qualifier: 'co',\n    location: 'primary'\n  },\n  fontFamily: {\n    qualifier: false\n  },\n  fontSize: {\n    qualifier: false\n  },\n  fontWeight: {\n    qualifier: false\n  },\n  letterSpacing: {\n    qualifier: 'letter_spacing'\n  },\n  textDecoration: {\n    qualifier: false\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['overlays'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { overlays = [] } = cldOptions;\n\n  const type = 'overlay';\n  const typeQualifier = 'l';\n\n  overlays.forEach(({ publicId, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasText = typeof text === 'object';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId && !hasText ) {\n      console.warn(`An ${type} is missing Public ID or Text`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation;\n\n    if ( hasText ) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n    }\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Text styling\n\n    if ( hasText ) {\n      const textTransformations = [];\n\n      Object.keys(text).forEach(key => {\n        if ( !qualifiersText[key] ) return;\n\n        const { qualifier, location } = qualifiersText[key];\n\n        if ( location === 'primary' ) {\n          primary.push(`${qualifier}_${text[key]}`);\n        } else {\n          textTransformations.push(text[key]);\n        }\n      });\n\n      layerTransformation = `${layerTransformation}:${textTransformations.join('_')}:${text.text}`\n    }\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['removeBackground'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { removeBackground = false } = cldOptions;\n  if ( removeBackground ) {\n    cldImage.effect('e_background_removal');\n  }\n}","const params = [\n  'art',\n  {\n    prop: 'autoBrightness',\n    effect: 'auto_brightness',\n  },\n  {\n    prop: 'autoColor',\n    effect: 'auto_color',\n  },\n  {\n    prop: 'autoContrast',\n    effect: 'auto_contrast',\n  },\n  {\n    prop: 'assistColorblind',\n    effect: 'assist_colorblind',\n  },\n  'blackwhite',\n  'blur',\n  {\n    prop: 'blurFaces',\n    effect: 'blur_faces',\n  },\n  {\n    prop: 'blurRegion',\n    effect: 'blur_region',\n  },\n  'brightness',\n  {\n    prop: 'brightnessHSB',\n    effect: 'brightness_hsb',\n  },\n  'cartoonify',\n  'colorize',\n  'contrast',\n  'distort',\n  {\n    prop: 'fillLight',\n    effect: 'fill_light',\n  },\n  'gamma',\n  {\n    prop: 'gradientFade',\n    effect: 'gradient_fade',\n  },\n  'grayscale',\n  'improve',\n  'negate',\n  {\n    prop: 'oilPaint',\n    effect: 'oil_paint',\n  },\n  'outline',\n  'pixelate',\n  {\n    prop: 'pixelateFaces',\n    effect: 'pixelate_faces',\n  },\n  {\n    prop: 'pixelateRegion',\n    effect: 'pixelate_region',\n  },\n  'redeye',\n  {\n    prop: 'replaceColor',\n    effect: 'replace_color',\n  },\n  'saturation',\n  'sepia',\n  'shadow',\n  'sharpen',\n  'shear',\n  {\n    prop: 'simulateColorblind',\n    effect: 'simulate_colorblind',\n  },\n  'tint',\n  {\n    prop: 'unsharpMask',\n    effect: 'unsharp_mask',\n  },\n  'vectorize',\n  'vibrance',\n  'vignette',\n];\n\nexport const props = params.map(param => param.prop || param);\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  params.forEach(key => {\n\n    const prop = key.prop || key;\n    const effect = key.effect || key;\n\n    if ( prop === 'oilPaint' && cldOptions[prop]) {\n      console.log('cldOptions[prop]', cldOptions[prop])\n    }\n    if ( cldOptions[prop] === true ) {\n      cldImage.effect(`e_${effect}`);\n    } else if ( typeof cldOptions[prop] === 'string' ) {\n      cldImage.effect(`e_${effect}:${cldOptions[prop]}`);\n    }\n  });\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['underlays'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { underlays = [] } = cldOptions;\n\n  const type = 'underlay';\n  const typeQualifier = 'u';\n\n  underlays.forEach(({ publicId, type, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId ) {\n      console.warn(`An ${type} is missing a Public ID`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['zoompan'];\n\nexport const options = {\n  format: 'gif'\n}\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  const { zoompan = false } = cldOptions;\n\n  if ( zoompan === true ) {\n    cldImage.effect('e_zoompan');\n  } else if ( typeof zoompan === 'string' ) {\n    if ( zoompan === 'loop' ) {\n      cldImage.effect('e_zoompan');\n      cldImage.effect('e_loop');\n    } else {\n      cldImage.effect(`e_zoompan:${zoompan}`);\n    }\n  } else if ( typeof zoompan === 'object' ) {\n    let zoompanEffect = 'e_zoompan';\n\n    if ( typeof zoompan.options === 'string' ) {\n      zoompanEffect = `${zoompanEffect}${zoompan.options}`;\n    }\n\n    cldImage.effect(zoompanEffect);\n\n    let loopEffect;\n\n    if ( zoompan.loop === true ) {\n      loopEffect = 'e_loop';\n    } else if ( typeof zoompan.loop === 'string' ) {\n      loopEffect = `e_loop${zoompan.loop}`;\n    }\n\n    if ( loopEffect ) {\n      cldImage.effect(loopEffect);\n    }\n  }\n}","import { Cloudinary } from '@cloudinary/url-gen';\n\nimport * as croppingPlugin from '../plugins/cropping';\nimport * as overlaysPlugin from '../plugins/overlays';\nimport * as removeBackgroundPlugin from '../plugins/remove-background';\nimport * as effectsPlugin from '../plugins/effects';\nimport * as underlaysPlugin from '../plugins/underlays';\nimport * as zoompanPlugin from '../plugins/zoompan';\n\nimport {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nconst cld = new Cloudinary({\n  cloud: {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n  },\n  url: {\n    // Used to avoid issues with SSR particularly for the blurred placeholder\n    analytics: false\n  }\n});\n\nexport const transformationPlugins = [\n  removeBackgroundPlugin, // Background Removal must always come first\n  croppingPlugin,\n  effectsPlugin,\n  overlaysPlugin,\n  underlaysPlugin,\n  zoompanPlugin\n];\n\nexport function cloudinaryLoader(defaultOptions, cldOptions) {\n  const options = {\n    format: 'auto',\n    quality: 'auto',\n    ...defaultOptions\n  };\n\n  const cldImage = cld.image(options.src);\n\n  transformationPlugins.forEach(({ plugin, options: pluginOptions }) => {\n    plugin({\n      cldImage,\n      options,\n      cldOptions\n    });\n\n    if ( pluginOptions?.format ) {\n      options.format = pluginOptions.format;\n    }\n  });\n\n  return cldImage\n          .format(options.format)\n          .delivery(`q_${options.quality}`)\n          .toURL();\n}","import Image from 'next/image';\n\nimport { createPlaceholderUrl } from '../../lib/cloudinary';\nimport { cloudinaryLoader, transformationPlugins } from '../../loaders/cloudinary-loader';\n\nconst CldImage = props => {\n\n  const CLD_OPTIONS = [];\n\n  transformationPlugins.forEach(({ props = [] }) => {\n    props.forEach(prop => {\n      if ( CLD_OPTIONS.includes(prop) ) {\n        throw new Error(`Option ${prop} already exists!`);\n      }\n      CLD_OPTIONS.push(prop);\n    });\n  })\n\n  // Construct the base Image component props by filtering out Cloudinary-specific props\n\n  const imageProps = {};\n\n  Object.keys(props)\n    .filter(key => !CLD_OPTIONS.includes(key))\n    .forEach(key => imageProps[key] = props[key]);\n\n  // Construct Cloudinary-specific props by looking for values for any of the supported prop keys\n\n  const cldOptions = {};\n\n  CLD_OPTIONS.forEach(key => {\n    if ( props[key] ) {\n      cldOptions[key] = props[key];\n    }\n  });\n\n  // If we see a placeholder option, configure a Cloudinary-based URL.\n  // The resulting image will always be blurred per Next.js, so we're\n  // limited on options for placeholders.\n  //\n  // We need to do this logic here as we potentially need to mutate\n  // an Image component prop as opposed to simply the URL\n  //\n  // https://nextjs.org/docs/api-reference/next/image#blurdataurl\n\n  if ( imageProps.placeholder ) {\n    imageProps.blurDataURL = createPlaceholderUrl({\n      src: props.src,\n      placeholder: props.placeholder\n    });\n\n    if ( imageProps.placeholder !== 'blur' ) {\n      imageProps.placeholder = 'blur';\n    }\n  }\n\n  return (\n    <Image\n      {...imageProps}\n      loader={(options) => cloudinaryLoader({ ...imageProps, options }, cldOptions)}\n    />\n  );\n}\n\nexport default CldImage;"],"names":["cld","Cloudinary","cloud","cloudName","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","url","analytics","createPlaceholderUrl","src","placeholder","cldImage","image","resize","delivery","format","effect","includes","color","split","splice","join","toURL","cropsGravityAuto","props","plugin","options","cldOptions","width","height","crop","gravity","transformationString","console","warn","primary","aspectRatio","qualifier","position","angle","x","y","text","location","fontFamily","fontSize","fontWeight","letterSpacing","textDecoration","overlays","type","typeQualifier","forEach","publicId","effects","layerEffects","_excluded","hasPublicId","hasText","hasPosition","layerTransformation","replace","applied","Object","keys","key","qualifiersPrimary","push","textTransformations","qualifiersText","qualifiersPosition","length","addTransformation","removeBackground","params","prop","map","param","log","underlays","zoompan","zoompanEffect","loopEffect","loop","transformationPlugins","removeBackgroundPlugin","croppingPlugin","effectsPlugin","overlaysPlugin","underlaysPlugin","zoompanPlugin","cloudinaryLoader","defaultOptions","quality","pluginOptions","CldImage","CLD_OPTIONS","Error","imageProps","filter","blurDataURL","_jsx","Image"],"mappings":"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"}